spring:
    kafka:
        bootstrap-servers: ${KAFKA_SERVERS}
        producer:
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        consumer:
            group-id: weekly-sentiment-group
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: com.rahul.journal_app.model
        properties:
            security:
                protocol: SASL_SSL
            sasl:
                mechanism: PLAIN
                jaas:
                    config: ${KAFKA_CONFIG}
            session:
                timeout:
                    ms: 45000

    redis:
        host: ${REDIS_HOST}
        port: 14040
        password: ${REDIS_PASSWORD}

    mail:
        host: smtp.gmail.com
        port: 587
        username: ${JAVA_EMAIL}
        password: ${JAVA_EMAIL_PASSWORD}
        properties:
            mail:
                smtp:
                    ssl:
                        trust: smtp.gmail.com
                    auth: true
                    starttls:
                        enable: true
                        required: true
    data:
        mongodb:
            uri: ${MONGODB_URI}
            database: journaldb
            auto-index: true

weather:
    api:
        key: ${WEATHER_API_KEY}
        url: http://api.weatherstack.com/current?access_key=weatherApiKey&query=city

twitter:
    api:
        key: ${TWITTER_API_KEY}
        host: twitter-api45.p.rapidapi.com
        url: https://twitter-api45.p.rapidapi.com/tweet.php?id=USER_ID

server:
    port: ${SERVER_PORT}
    servlet:
        context-path: /journal

jwt:
    secret_key: ${JWT_SECRET_KEY}
    expiration_time: ${JWT_EXPIRY_TIME_IN_MINUTE}

otp:
    expiration_time: ${OTP_EXPIRY_TIME_IN_MINUTE}

url:
    baseUrl: ${APPLICATION_BASE_URL}